/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 52K7GWKZcCo6aFrZqDHdPd

import * as React from "react";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 52K7GWKZcCo6aFrZqDHdPd/projectModule
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;
  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const { children, antdConfigProviderProps, embedCssProps } = props;

  return (
    <AntdConfigProvider
      {...antdConfigProviderProps}
      borderRadius={
        antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
          ? antdConfigProviderProps.borderRadius!
          : 6
      }
      colorBgBase={
        antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
          ? antdConfigProviderProps.colorBgBase!
          : "#ffffff"
      }
      colorError={
        antdConfigProviderProps && "colorError" in antdConfigProviderProps
          ? antdConfigProviderProps.colorError!
          : "#ff4d4f"
      }
      colorInfo={
        antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
          ? antdConfigProviderProps.colorInfo!
          : "#1677ff"
      }
      colorPrimary={
        antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
          ? antdConfigProviderProps.colorPrimary!
          : "#474DC2"
      }
      colorSuccess={
        antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
          ? antdConfigProviderProps.colorSuccess!
          : "#52c41a"
      }
      colorWarning={
        antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
          ? antdConfigProviderProps.colorWarning!
          : "#faad14"
      }
      controlHeight={
        antdConfigProviderProps && "controlHeight" in antdConfigProviderProps
          ? antdConfigProviderProps.controlHeight!
          : 32
      }
      defaultDark={
        antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
          ? antdConfigProviderProps.defaultDark!
          : false
      }
      lineWidth={
        antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
          ? antdConfigProviderProps.lineWidth!
          : 1
      }
      loadingText={
        antdConfigProviderProps && "loadingText" in antdConfigProviderProps
          ? antdConfigProviderProps.loadingText!
          : undefined
      }
      removeLoading={
        antdConfigProviderProps && "removeLoading" in antdConfigProviderProps
          ? antdConfigProviderProps.removeLoading!
          : undefined
      }
      sizeStep={
        antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeStep!
          : 4
      }
      sizeUnit={
        antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
          ? antdConfigProviderProps.sizeUnit!
          : 4
      }
      themeStyles={
        antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
          ? antdConfigProviderProps.themeStyles!
          : true
          ? {
              fontFamily: "Inter",
              fontSize: "16px",
              fontWeight: "400",
              lineHeight: "1.5",
              color: "#535353",
              letterSpacing: "normal"
            }
          : undefined
      }
      wireframe={
        antdConfigProviderProps && "wireframe" in antdConfigProviderProps
          ? antdConfigProviderProps.wireframe!
          : false
      }
    >
      <EmbedCss
        {...embedCssProps}
        css={
          embedCssProps && "css" in embedCssProps
            ? embedCssProps.css!
            : "/* \u0641\u0648\u0646\u062a \u0641\u0627\u0631\u0633\u06cc */\r\n@font-face {\r\n  font-family: 'yekan_bakh';\r\n  src: url('https://liom.storage.c2.liara.space/config/font/yekan%20bakh_normal.ttf');\r\n  font-weight: normal;\r\n  unicode-range: U+0600-06FF; /* \u0641\u0627\u0631\u0633\u06cc */\r\n}\r\n@font-face {\r\n  font-family: 'yekan_bakh';\r\n  src: url('https://liom.storage.c2.liara.space/config/font/yekan%20bakh_bold.ttf');\r\n  font-weight: bold;\r\n  unicode-range: U+0600-06FF;\r\n}\r\n@font-face {\r\n  font-family: 'yekan_bakh';\r\n  src: url('https://liom.storage.c2.liara.space/config/font/yekan%20bakh_medium.ttf');\r\n  font-weight: 500;\r\n  unicode-range: U+0600-06FF;\r\n}\r\n\r\n/* \u0641\u0648\u0646\u062a \u0627\u0646\u06af\u0644\u06cc\u0633\u06cc \u0645\u06cc\u0646\u06cc\u0645\u0627\u0644 */\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap');\r\n\r\nhtml, body {\r\n  direction: rtl;\r\n  touch-action: manipulation !important;\r\n  font-family: 'yekan_bakh', 'Poppins', sans-serif !important;\r\n  font-feature-settings: 'lnum' 0, 'tnum' 0;\r\n}\r\n\r\n* {\r\n  direction: rtl;\r\n  letter-spacing: 0 !important;\r\n  word-spacing: 0 !important;\r\n  text-justify: inter-word !important;\r\n  font-family: 'yekan_bakh', 'Inter', sans-serif !important;\r\n  font-feature-settings: 'lnum' 0, 'tnum' 0;\r\n}\r\n"
        }
      >
        {children}
      </EmbedCss>
    </AntdConfigProvider>
  );
}
